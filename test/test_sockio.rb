# Code Generated by ZenTest v. 2.3.0
#                 classname: asrt / meth =  ratio%
#                    SockIO:   10 /    7 = 142.86%

unless defined? $ZENTEST and $ZENTEST
require 'test/unit'
require 'net/sockio'
require 'flexmock'
class FlexMock
  undef_method(:send)
  rescue NameError
end
end

class TestSockIO < Test::Unit::TestCase
  def setup
    @data = "hello world\r\n"
    sock = FlexMock.new
    sock.mock_handle(:recv) { |bufsize,flag| @data.slice!(0...bufsize) }
    sock.mock_handle(:send) { |msg,flag| msg.size }
    @sock = SockIO.new(sock, 5)
  end

  def test_read
    assert_equal("hello", @sock.read)
    assert_equal(" worl", @sock.read)
    assert_equal("d\r\n", @sock.read)
  end

  def test_read_flush
    assert_equal("", @sock.read_flush)
  end

  def test_read_urgent
    assert_equal("hello", @sock.read_urgent)
    assert_equal(" worl", @sock.read_urgent)
    assert_equal("d\r\n", @sock.read_urgent)
  end

  def test_write
    assert_equal(true, @sock.write("hello world\r\n"))
  end

  def test_write_flush
    assert_equal("", @sock.write_flush)
  end

  def test_write_urgent
    assert_equal(13, @sock.write_urgent("hello world\r\n"))
  end
end

