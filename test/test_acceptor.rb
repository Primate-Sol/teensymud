# Code Generated by ZenTest v. 2.3.0
#                 classname: asrt / meth =  ratio%
#                  Acceptor:    4 /    4 = 100.00%

unless defined? $ZENTEST and $ZENTEST
require 'test/unit'
require 'net/acceptor'
require 'flexmock'
class FlexMock
  undef_method(:send)
  rescue NameError
end
end

class TestAcceptor < Test::Unit::TestCase
  def setup
    @log = FlexMock.new
    @log.mock_handle(:info) { |msg| msg }
    @log.mock_handle(:debug) { |msg| msg }
    @log.mock_handle(:warn) { |msg| msg }
    @log.mock_handle(:error) { |msg| msg }
    @serv = FlexMock.new
    @serv.mock_handle(:log) { @log }
    @acceptor = Acceptor.new(@serv,4000,[:server, :filter, :sockio])
  end

  def test_handle_close
    assert_respond_to(@acceptor, :handle_close)
  end

  def test_handle_input
    assert_respond_to(@acceptor, :handle_input)
  end

  def test_init
    assert_respond_to(@acceptor, :init)
#    assert_equal(true, @acceptor.init)
  end
end

