# Code Generated by ZenTest v. 2.3.0
#                 classname: asrt / meth =  ratio%
#               ColorFilter:    2 /    2 = 100.00%

unless defined? $ZENTEST and $ZENTEST
require 'test/unit'
require 'protocol/colorfilter'
require 'flexmock'
end

class TestColorFilter < Test::Unit::TestCase
  def setup
    @color = false
    @log = FlexMock.new
    @log.mock_handle(:info) { |msg| puts msg }
    @log.mock_handle(:debug) { |msg| puts msg }
    @log.mock_handle(:warn) { |msg| puts msg }
    @log.mock_handle(:error) { |msg| puts msg }
    @pstack = FlexMock.new
    @pstack.mock_handle(:log) { @log }
    @pstack.mock_handle(:color_on) { @color = !@color }
    @filter = ColorFilter.new(@pstack)
  end

  def test_filter_out
    assert_equal("\e[0;30mhello\e[0m\n",
      @filter.filter_out("[COLOR=black]hello[/COLOR]"))
    assert_equal("hello",
      @filter.filter_out("[COLOR=black]hello[/COLOR]"))
  end
end

